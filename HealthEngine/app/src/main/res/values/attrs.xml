<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (C) 2008 ZXing authors

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<resources>

    <declare-styleable name="ViewfinderView"></declare-styleable>

    <!-- CircularImageView for custom shape -->
    <declare-styleable name="CircularImageView">

        <!-- Specifies whether or not to draw a circular border around the image. -->
        <attr name="border" format="boolean"></attr>
        <!-- Specifies the color of the border draw around the image. (if enabled) -->
        <attr name="border_color" format="color"></attr>
        <!-- Makes the border this pixels wide. (if enabled) -->
        <attr name="border_width" format="dimension"></attr>
        <!-- Specifies whether or not to draw a selector on this view upon touch events. -->
        <attr name="selector" format="boolean"></attr>
        <!-- Specifies the color of the selector draw on top of the image upon touch events. (if enabled) -->
        <attr name="selector_color" format="color"></attr>
        <!-- Specifies the color of the selector stroke drawn around the image upon touch events. Be sure to provide some opacity. (if enabled) -->
        <attr name="selector_stroke_color" format="color"></attr>
        <!-- Makes the selector stroke drawn around the image upon touch events this pixels wide. (if enabled) -->
        <attr name="selector_stroke_width" format="dimension"></attr>
        <!-- Specifies whether or not to draw a shadow around your circular image. -->
        <attr name="shadow" format="boolean"></attr>
    </declare-styleable>
    <declare-styleable name="CircularImageViewStyle">
        <attr name="circularImageViewDefault" format="reference" />
    </declare-styleable>
    <declare-styleable name="ArcProgress">
        <attr name="arc_progress" format="integer" />
        <attr name="arc_angle" format="float" />
        <attr name="arc_stroke_width" format="dimension" />
        <attr name="arc_max" format="integer" />
        <attr name="arc_unfinished_color" format="color" />
        <attr name="arc_finished_color" format="color" />
        <attr name="arc_text_size" format="dimension" />
        <attr name="arc_text_color" format="color" />
        <attr name="arc_suffix_text" format="string" />
        <attr name="arc_suffix_text_size" format="dimension" />
        <attr name="arc_suffix_text_padding" format="dimension" />
        <attr name="arc_bottom_text" format="string" />
        <attr name="arc_bottom_text_size" format="dimension" />
    </declare-styleable>
    <declare-styleable name="SlidingUpPanelLayout">
        <attr name="PanelHeight" format="dimension" />
        <attr name="ShadowHeight" format="dimension" />
        <attr name="ParallaxOffset" format="dimension" />
        <attr name="FadeColor" format="color" />
        <attr name="FlingVelocity" format="integer" />
        <attr name="DragView" format="reference" />
        <attr name="ScrollableView" format="reference" />
        <attr name="Overlay" format="boolean" />
        <attr name="ClipPanel" format="boolean" />
        <attr name="AnchorPoint" format="float" />
        <attr name="InitialState" format="enum">
            <enum name="expanded" value="0" />
            <enum name="collapsed" value="1" />
            <enum name="anchored" value="2" />
            <enum name="hidden" value="3" />
        </attr>
    </declare-styleable>


    <declare-styleable name="CircleImageView">
        <attr name="view_border_width" format="dimension" />
        <attr name="view_border_color" format="color" />
        <attr name="view_border_overlay" format="boolean" />
    </declare-styleable>

    <declare-styleable name="FontedText">
        <attr name="font" format="string" />
    </declare-styleable>

</resources>